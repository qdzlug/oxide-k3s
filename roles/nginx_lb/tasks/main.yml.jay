---
- name: Install required dependencies for HTTPS transport and keyring
  ansible.builtin.apt:
    name:
      - curl
      - gnupg2
      - ca-certificates
      - lsb-release
      - ubuntu-keyring
    state: present
    update_cache: true

- name: Download NGINX signing key
  ansible.builtin.get_url:
    url: https://nginx.org/keys/nginx_signing.key
    dest: /tmp/nginx_signing.key
    mode: "0644"

- name: Convert NGINX key to GPG format
  ansible.builtin.command: >
    gpg --dearmor -o /usr/share/keyrings/nginx-archive-keyring.gpg /tmp/nginx_signing.key
  args:
    creates: /usr/share/keyrings/nginx-archive-keyring.gpg

- name: Add official NGINX repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu {{ ansible_distribution_release | lower }} nginx"
    state: present
    filename: nginx

- name: Install NGINX
  ansible.builtin.apt:
    name: nginx
    state: present
    update_cache: true

- name: Ensure required directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - /etc/nginx/modules-enabled
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled
    - /etc/nginx/streams-enabled

- name: Ensure NGINX stream module is loaded from correct path
  ansible.builtin.copy:
    dest: /etc/nginx/modules-enabled/50-stream.conf
    content: |
      load_module /etc/nginx/modules/ngx_stream_module.so;
    mode: "0644"
    owner: root
    group: root

- name: Deploy NGINX HTTP proxy configuration
  ansible.builtin.template:
    src: nginx_k3s_proxy.conf.j2
    dest: /etc/nginx/conf.d/k3s.conf
    mode: "0644"

- name: Remove default NGINX landing page config
  ansible.builtin.file:
    path: /etc/nginx/conf.d/default.conf
    state: absent

- name: Deploy NGINX stream passthrough config for HTTPS
  ansible.builtin.template:
    src: nginx_k3s_stream.conf.j2
    dest: /etc/nginx/stream.conf
    mode: "0644"

- name: Ensure NGINX includes stream configs
  ansible.builtin.lineinfile:
    path: /etc/nginx/nginx.conf
    insertafter: "http {"
    line: "    include /etc/nginx/streams-enabled/*.conf;"
    state: present
    regexp: "streams-enabled/\\*\\.conf"

- name: Ensure NGINX includes top-level stream config
  ansible.builtin.lineinfile:
    path: /etc/nginx/nginx.conf
    insertafter: '^worker_processes'
    line: 'include /etc/nginx/stream.conf;'
    state: present
    regexp: 'stream\.conf'

- name: Reload NGINX
  ansible.builtin.service:
    name: nginx
    state: reloaded

# --- Traefik NodePort Patching ---

- name: Set kubeconfig default path
  ansible.builtin.set_fact:
    effective_kubeconfig: "{{ kubeconfig | default(lookup('env', 'HOME') ~ '/.kube/config.new') ~ ':' ~ lookup('env', 'HOME') ~ '/.kube/config:/etc/rancher/k3s/k3s.yaml' }}"

- name: Patch Traefik NodePort values via k8s module
  kubernetes.core.k8s:
    state: present
    kind: Service
    name: traefik
    namespace: kube-system
    api_version: v1
    definition:
      spec:
        type: LoadBalancer
        ports:
          - name: web
            port: 80
            targetPort: web
            protocol: TCP
            nodePort: 30080
          - name: websecure
            port: 443
            targetPort: websecure
            protocol: TCP
            nodePort: 30443
  delegate_to: localhost
  become: false
  environment:
    KUBECONFIG: "{{ effective_kubeconfig }}"

- name: Wait for Traefik service to be updated
  kubernetes.core.k8s_info:
    kind: Service
    namespace: kube-system
    name: traefik
  register: traefik_service_info
  delegate_to: localhost
  environment:
    KUBECONFIG: "{{ effective_kubeconfig }}"
  become: false
  retries: 10
  delay: 6
  until:
    - traefik_service_info.resources | length > 0
    - 30080 in (traefik_service_info.resources[0].spec.ports | map(attribute='nodePort') | list)
    - 30443 in (traefik_service_info.resources[0].spec.ports | map(attribute='nodePort') | list)
  changed_when: false
