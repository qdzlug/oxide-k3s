---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: {{ external_dns_namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "pods"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingressclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
  - kind: ServiceAccount
    name: external-dns
    namespace: {{ external_dns_namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: {{ external_dns_namespace }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
        - name: external-dns
          image: {{ external_dns_image }}
          args:
            - --provider={{ external_dns_provider }}
            - --source=ingress
            - --policy=sync
            - --registry=txt
            - --txt-owner-id={{ external_dns_txt_owner_id }}
            - --txt-prefix={{ external_dns_txt_prefix }}
{% if dns_domain is defined and dns_domain != "" %}
            - --domain-filter={{ dns_domain }}
{% endif %}
            - --ingress-class=traefik
            - --log-level=info
            - --log-format=text
          env:
{% if external_dns_provider == 'dnsimple' %}
            - name: DNSIMPLE_OAUTH
              valueFrom:
                secretKeyRef:
                  name: dnsimple-token
                  key: token
{% elif external_dns_provider == 'cloudflare' %}
            - name: CF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: cloudflare-token
                  key: apiToken
{% elif external_dns_provider == 'digitalocean' %}
            - name: DO_TOKEN
              valueFrom:
                secretKeyRef:
                  name: digitalocean-token
                  key: token
{% endif %}
